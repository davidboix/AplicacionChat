package exercicis.interficiechat;

import java.awt.Image;
import java.time.LocalTime;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import javax.swing.ImageIcon;

/**
 *
 * @author David Boix Sanchez
 * @version 1.0
 */
public class InterficieXat extends javax.swing.JFrame {

    String resFinal = "";

    /**
     * Creates new form InterficieXat
     */
    public InterficieXat() {
        initComponents();
        inicialitzarInputs();
        inicialitzarIconos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        vistaGeneral = new javax.swing.JPanel();
        headerVista = new javax.swing.JPanel();
        botoXatPrivat = new javax.swing.JButton();
        botoXatGrupal = new javax.swing.JButton();
        titolXat = new javax.swing.JLabel();
        llistatVista = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        mainVista = new javax.swing.JPanel();
        espaiControlMissatge = new javax.swing.JPanel();
        botoSetttings = new javax.swing.JButton();
        botoEnviarMsg = new javax.swing.JButton();
        inputMsg = new componentsPersonalitzats.JTextFieldPersonalitzat();
        espaiMissatges = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        textAreaMissatge = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        vistaGeneral.setLayout(new java.awt.BorderLayout());

        headerVista.setBackground(new java.awt.Color(203, 219, 242));
        headerVista.setLayout(new javax.swing.BoxLayout(headerVista, javax.swing.BoxLayout.LINE_AXIS));

        botoXatPrivat.setBackground(new java.awt.Color(125, 165, 221));
        botoXatPrivat.setToolTipText("Boto que ens serveix per enviar missatges per privat");
        headerVista.add(botoXatPrivat);

        botoXatGrupal.setBackground(new java.awt.Color(125, 165, 221));
        botoXatGrupal.setToolTipText("Boto que ens serveix per enviar missatges per al grup general");
        headerVista.add(botoXatGrupal);

        titolXat.setText("COSTAXAT");
        titolXat.setToolTipText("Titol de la nostra aplicacio de missatgeria");
        headerVista.add(titolXat);

        vistaGeneral.add(headerVista, java.awt.BorderLayout.PAGE_START);

        llistatVista.setBackground(new java.awt.Color(203, 219, 242));
        llistatVista.setLayout(new java.awt.BorderLayout());

        jButton3.setText("Client 1");
        llistatVista.add(jButton3, java.awt.BorderLayout.CENTER);

        jLabel2.setText("Llistat usuaris connectats");
        llistatVista.add(jLabel2, java.awt.BorderLayout.PAGE_START);

        vistaGeneral.add(llistatVista, java.awt.BorderLayout.LINE_START);

        mainVista.setLayout(new java.awt.BorderLayout());

        espaiControlMissatge.setBackground(new java.awt.Color(203, 219, 242));
        espaiControlMissatge.setToolTipText("");
        espaiControlMissatge.setLayout(new java.awt.GridBagLayout());

        botoSetttings.setBackground(new java.awt.Color(125, 165, 221));
        botoSetttings.setToolTipText("Boto que no te cap funcio");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        espaiControlMissatge.add(botoSetttings, gridBagConstraints);

        botoEnviarMsg.setBackground(new java.awt.Color(125, 165, 221));
        botoEnviarMsg.setText("Enviar ");
        botoEnviarMsg.setToolTipText("Boto que serveix per enviar missatges al xat");
        botoEnviarMsg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botoEnviarMsgActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        espaiControlMissatge.add(botoEnviarMsg, gridBagConstraints);

        inputMsg.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 50;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        espaiControlMissatge.add(inputMsg, gridBagConstraints);

        mainVista.add(espaiControlMissatge, java.awt.BorderLayout.PAGE_END);

        espaiMissatges.setLayout(new java.awt.BorderLayout());

        jScrollPane2.setViewportView(textAreaMissatge);

        espaiMissatges.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        mainVista.add(espaiMissatges, java.awt.BorderLayout.CENTER);

        vistaGeneral.add(mainVista, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(vistaGeneral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(vistaGeneral, javax.swing.GroupLayout.DEFAULT_SIZE, 383, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Event que s'activara quan el usuari hagui polsat el boto d'enviar
     * utilitzant qualsevol mitja de transmissio per poder activar el boto
     *
     * @param evt El event que activara la funcio
     */
    private void botoEnviarMsgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botoEnviarMsgActionPerformed

        String msg = this.inputMsg.getText();
        if (msg.isEmpty()) {
            System.out.println("NO pots enviar un missatge en blanc!");
            return;
        }

        if (!msg.isEmpty()) {
            String missatge = this.textAreaMissatge.getText();
            ArrayList<String> arrayListMsg = new ArrayList<>();
            arrayListMsg.add(msg);
            for (String misg : arrayListMsg) {
                resFinal += misg;
            }
            String dataActual = getData();
            String horaActual = getTemps();
            this.textAreaMissatge.setText("[" + dataActual + " || " + horaActual + "]: " + msg);
            this.inputMsg.setText(null);
        }
    }//GEN-LAST:event_botoEnviarMsgActionPerformed
    /**
     * Funcio creada per inicialitzar el JTextField amb un missatge per defecte
     * per a que el usuari sapigui on ha de escriure un missatge que enviara per
     * el xat.
     */
    private void inicialitzarInputs() {
        this.inputMsg.setPlaceHolder("Escriu el teu missatge...");
        this.inputMsg.setText(this.inputMsg.getPlaceHolder());
    }

    /**
     * Funcio desenvolupada per poder retornar la data la qual ens trobem en
     * aquell moment en format cadena de text
     *
     * @return La data de avui en format cadena de text.
     */
    private String getData() {
        Calendar cal = Calendar.getInstance();
        int dia = cal.get(Calendar.DAY_OF_MONTH);
        int mes = cal.get(Calendar.MONTH) + 1;
        int any = cal.get(Calendar.YEAR);
        String data = dia + "/" + mes + "/" + any;

        if (!data.isEmpty()) {
            return data;
        }

        return "";
    }

    /**
     * Funcio desenvolupada per obtenir la hora, minuts i segons actuals en el
     * moment que fem la crida de la funcio
     *
     * @return Hora, Minuts i Segons com una cadena de text.
     */
    private String getTemps() {
        LocalTime myObj = LocalTime.now();
        String hora = tractarTemps(myObj.getHour());
        String minuts = tractarTemps(myObj.getMinute());
        String segons = tractarTemps(myObj.getSecond());
        String temps = hora + ":" + minuts + ":" + segons;
        if (!temps.isEmpty()) {
            return temps;
        }
        return "";
    }

    /**
     * Funcio desenvolupada per poder passar tipus enters a tipus cadena de text
     * TODO: Possible canvi de nom de la funcio
     *
     * @param temps El valor enter que volem canviar a una cadena de text.
     * @return El valor enter que hem passat per parametres convertit a cadena
     * de text
     */
    private String tractarTemps(int temps) {
        String tempsActual = String.valueOf(temps);
        return tempsActual;
    }

    /**
     * Funcio creada per poder inicialitzar les icones que apareixeran en la
     * interficie grafica que es visualitzara
     */
    private void inicialitzarIconos() {

        ImageIcon iconoXatPrivatAModificar = new ImageIcon("src\\main\\java\\img\\iconoXatPrivat.png");
        ImageIcon iconoXatGrupalAModificar = new ImageIcon("src\\main\\java\\img\\iconoXatGrupal.png");
        ImageIcon iconoSettingAModificar = new ImageIcon("src\\main\\java\\img\\iconoSettings.png");
        ImageIcon iconoEnviarModificar = new ImageIcon("src\\main\\java\\img\\iconoEnviar.png");

        Image iconoXatPrivatModificat = iconoXatPrivatAModificar.getImage().getScaledInstance(17, 17, Image.SCALE_SMOOTH);
        Image iconoXatGrupalModificat = iconoXatGrupalAModificar.getImage().getScaledInstance(17, 17, Image.SCALE_SMOOTH);
        Image iconoSettingsModificat = iconoSettingAModificar.getImage().getScaledInstance(17, 17, Image.SCALE_SMOOTH);
        Image iconoEnviarModificat = iconoEnviarModificar.getImage().getScaledInstance(17, 17, Image.SCALE_SMOOTH);

        ImageIcon iconoXatPrivat = new ImageIcon(iconoXatPrivatModificat);
        ImageIcon iconoXatGrupal = new ImageIcon(iconoXatGrupalModificat);
        ImageIcon iconoSettings = new ImageIcon(iconoSettingsModificat);
        ImageIcon iconoEnviar = new ImageIcon(iconoEnviarModificat);

        this.botoXatPrivat.setIcon(iconoXatPrivat);
        this.botoXatGrupal.setIcon(iconoXatGrupal);
        this.botoSetttings.setIcon(iconoSettings);
        this.botoEnviarMsg.setIcon(iconoEnviar);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterficieXat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterficieXat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterficieXat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterficieXat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterficieXat().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botoEnviarMsg;
    private javax.swing.JButton botoSetttings;
    private javax.swing.JButton botoXatGrupal;
    private javax.swing.JButton botoXatPrivat;
    private javax.swing.JPanel espaiControlMissatge;
    private javax.swing.JPanel espaiMissatges;
    private javax.swing.JPanel headerVista;
    private componentsPersonalitzats.JTextFieldPersonalitzat inputMsg;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel llistatVista;
    private javax.swing.JPanel mainVista;
    private javax.swing.JTextPane textAreaMissatge;
    private javax.swing.JLabel titolXat;
    private javax.swing.JPanel vistaGeneral;
    // End of variables declaration//GEN-END:variables
}
